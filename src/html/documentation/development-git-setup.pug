extends ../base

block metas-vars
	- var title       = 'Docs - Development: GIT setup - '
	- var description = ', documentation, Development: GIT setup'
	- var keywords    = ', documentation, Development: GIT setup'

block content
	.container
		#documentation.row
			.col-md-9
				h1 Development: GIT setup
				p
					| Our development version is hosted and mantained on GitHub. The official page can be found at 
					a(href='https://github.com/monocasual/giada') github.com/monocasual/giada
					|  and the repository with the master branch at
				p.code
					| https://github.com/monocasual/giada.git
					br
					| &#x9;git://github.com/monocasual/giada.git
				p
					| Please refer to the 
					a(href='https://help.github.com/') GitHub documentation
					|  on how to 
					em fork
					| , 
					em pull
					| , 
					em push
					|  and so on. If you&apos;re new to GitHub, we would suggest a very nice 
					a(href='http://net.tutsplus.com/tutorials/other/getting-the-hang-of-github/') tutorial
					|  for beginners.
				h2 Our branching model
				p
					| We put the most experimental code in a 
					em feature
					|  branch. When the new feature is completed, we merge/rebase the feature branch into 
					em master
					|  and we drop the feature branch. However the master branch does not necessarily point to the latest release. For that, we use tags, whenever a new release is ready. For example, if you do 
					span.code git tag --list
					|  you will see the full tag list:
				pre.code.
					v0.10.0
					v0.10.1
					v0.10.2
					v0.11.0
					v0.11.1
					v0.11.2
					...
						
				p
					| Do you want the release v0.11.2? Just 
					span.code git checkout v0.11.2
					|  and you&apos;re done.
				h2 TDD and continuous integration
				p
					| Our development style strives to be test-driven as best it can. There is a daily growing test suite under 
					span.code src/tests
					|  that you can compile and run as described in chapter 
					a(href='documentation-compiling-from-source') Compiling from source
					| . A subset of those tests
					| are crafted for 
					a(href='https://travis-ci.org/') Travis CI
					|  and they rely upon travis.yml script, which takes care of some &quot;dependencies&quot; (wave files, midimaps, VST plugins and so on). The script basically downloads the needed files, for example:
				pre.code.
					# Download midimaps package for testing purposes
					
					- wget https://github.com/monocasual/giada-midimaps/archive/master.zip -O giada-midimaps-master.zip
					- unzip giada-midimaps-master.zip
					- mkdir -p $HOME/.giada/midimaps
					- cp giada-midimaps-master/midimaps/* $HOME/.giada/midimaps		
				p
					| You can however run the tests locally thanks to our smart configure script: it&apos;s instructed to guess whether those dependencies are present. If not, all test cases that require external files will adjust themselves accordingly.
				h2 Compiling the source in the local repository
				p
					| The source in the repository follows the same rules of the 
					em .tar
					|  package you download from this website. In the chapter 
					a(href='documentation-compiling-from-source') Compiling from source
					|  you will find all the informations needed.
				p
					| In addition to that, you may need to run the included 
					span.code autogen.sh
					|  script (available only in the repository) in order to prepare the build environment:
				pre.code.
					./autogen.sh
					configure [...]
					make
				p
					| The first time you clone the git repository you have to initialize it, because Giada contains a couple of external dependencies configured as Git submodules. Go into the project folder, root level and do:
				pre.code.
					git submodule init
					git submodule update	
				h2 Use the official Docker image for Giada
				p
					| Instead of cluttering up your environment with dependencies, scripts and compilers you may try our 
					a(href='https://hub.docker.com/u/monocasual/') Docker image
					| , designed to ease the compilation and testing processes. Take a look at the 
					a(href='https://github.com/monocasual/giada-docker') GitHub repository
					|  to know more.

			#side-menu.col-md-3.margin-top-xl
				include side-menu